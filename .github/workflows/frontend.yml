name: Evollt VPN frontend

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Установка SSH-клиента для подключения к серверу
      - name: Installing SSH client
        run: sudo apt-get install -y openssh-client

      # Добавляем SSH-ключ
      - name: Add SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          eval $(ssh-agent -s)
          ssh-add private_key

      - name: Deploy application via SSH
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} <<EOF
          # Вход в Docker Hub на сервере
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

          # Клонируем или обновляем репозиторий
          if [ ! -d "/var/www/frontend" ]; then
            git clone git@github.com:Teacher-Schedule/Frontend.git /var/www/frontend
          else
            cd /var/www/frontend
            git reset --hard
            git pull origin master
          fi


          # Загрузка последней версии образа
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/teacher_schedule:latest

          # Переход в директорию проекта
          cd /var/www/frontend

          # Остановка и удаление старых контейнеров
          docker compose down

          # Запуск новых контейнеров
          docker compose up -d --build
          EOF
